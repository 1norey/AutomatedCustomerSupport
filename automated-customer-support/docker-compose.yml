version: "3.9"

services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  mongo:
    image: mongo:5
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  auth-service:
    build: ./backend/auth-service
    env_file:
      - ./backend/auth-service/.env
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    networks:
      - backend

  ticket-service:
    build: ./backend/ticket-service
    environment:
      PORT: 5001
      MONGO_URI: mongodb://mongo:27017/ticketdb
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - "5001:5001"
    networks:
      - backend

  log-service:
    build: ./backend/log-service
    environment:
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - rabbitmq
    networks:
      - backend

  api-gateway:
    build: ./api-gateway
    environment:
      GATEWAY_PORT: 8080
    depends_on:
      - auth-service
      - ticket-service
    ports:
      - "8080:8080"
    networks:
      - backend

volumes:
  pgdata:
  mongodata:

networks:
  backend:
